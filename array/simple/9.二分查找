给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。


示例 1:

输入: nums = [-1,0,3,5,9,12], target = 9
输出: 4
解释: 9 出现在 nums 中并且下标为 4
示例 2:

输入: nums = [-1,0,3,5,9,12], target = 2
输出: -1
解释: 2 不存在 nums 中因此返回 -1

链接：https://leetcode-cn.com/problems/binary-search

思路：看到有序，且查找指定的值，首先想到二分查找。



二分查找关键点：
1.查找范围的选取 [0,size]
2.循环条件：left < right
3.选择左中位数，返回的left是大于等于目标值的第一个数
4.选择右中位数，返回的left是小于等于目标值的第一个数

class Solution {
    public int search(int[] nums, int target) {
        int left = 0;
        int right = nums.length-1;
        while(left < right){
            int mid = (left+right) >>>1;
            if(nums[mid] < target){
                left = mid+1;
            }else{
                right = mid;
            }
        }
        if(nums[left] == target) return left;
        return -1;
    }
}
