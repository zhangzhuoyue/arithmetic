一个好的算法，并不是写的精炼，别人看不懂的算法才是好的算法。好的算法是简单高效，容易理解。
在有序表中进行查找，考虑使用折半查找的思想。利用快慢或者前后两个指针的移动快速的定位需要目标元素的查找方向。



数组完成排序后，我们可以放置两个指针 i 和 j，其中 i 是慢指针，而 j 是快指针。只要 nums[i] = nums[j]，我们就增加 jj 以跳过重复项。
当我们遇到 nums[j] 不等于nums[i]时，跳过重复项的运行已经结束，因此我们必须把它（nums[j]）的值复制到 nums[i + 1]。
然后递增 i，接着我们将再次重复相同的过程，直到 j 到达数组的末尾为止。




public int removeDuplicates(int[] nums) {
    if (nums.length == 0) return 0;
    int i = 0;
    for (int j = 1; j < nums.length; j++) {
        if (nums[j] != nums[i]) {
            i++;
            nums[i] = nums[j];
        }
    }
    return i + 1;
}
